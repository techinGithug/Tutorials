{"ast":null,"code":"var _jsxFileName = \"D:\\\\techin\\\\react\\\\todo-app\\\\src\\\\components\\\\todo\\\\upateComponent.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport TodoDataService from '../../api/todo/TodoService.js';\n\nclass UpdateComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      TodoDataService.updateTodo(this.state.id).then(res => this.setState({\n        description: res.data.description,\n        targetDate: moment(res.data.targetDate).format(\"YYYY-MM-DD\")\n      }));\n    };\n\n    this.validate = values => {\n      let error = {};\n\n      if (!values.description) {\n        error.description = 'Please enter description';\n      } else if (values.description.length < 5) {\n        error.description = 'Please enter at least 5 charactor description';\n      }\n\n      if (!moment(values.targetDate).isValid) {\n        error.description = 'Target date is not valid';\n      }\n\n      return error;\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      description: 'Learn form',\n      targetDate: moment(new Date()).format('YYYY-MM-DD')\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  onSubmit(values) {\n    console.log(\"onSubmit : \" + values);\n  }\n\n  render() {\n    let _this$state = this.state,\n        description = _this$state.description,\n        targetDate = _this$state.targetDate;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Update\"), React.createElement(Formik, {\n      initialValues: {\n        description,\n        targetDate\n      },\n      onSubmit: this.onSubmit,\n      validateOnChange: false,\n      validateOnBlur: false,\n      validate: this.validate,\n      enableReinitialize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, props => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(ErrorMessage, {\n      name: \"description\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"targetDate\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Target date\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"date\",\n      name: \"targetDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nexport default UpdateComponent;","map":{"version":3,"sources":["D:\\techin\\react\\todo-app\\src\\components\\todo\\upateComponent.jsx"],"names":["React","Component","moment","Formik","Field","Form","ErrorMessage","TodoDataService","UpdateComponent","constructor","props","componentDidMount","updateTodo","state","id","then","res","setState","description","data","targetDate","format","validate","values","error","length","isValid","match","params","Date","onSubmit","bind","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport TodoDataService from '../../api/todo/TodoService.js';\r\n\r\nclass UpdateComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { \r\n            id: this.props.match.params.id,\r\n            description: 'Learn form',\r\n            targetDate: moment(new Date()).format('YYYY-MM-DD')\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n\r\n    }\r\n\r\n    onSubmit(values) {\r\n        console.log(\"onSubmit : \"+values)\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        TodoDataService.updateTodo(this.state.id)\r\n        .then( res => this.setState({\r\n            description: res.data.description,\r\n            targetDate: moment(res.data.targetDate).format(\"YYYY-MM-DD\")\r\n        }) )\r\n    }\r\n\r\n    validate = (values) => {\r\n        let error = {}\r\n        if(!values.description) {\r\n            error.description = 'Please enter description'\r\n        } else if(values.description.length < 5) {\r\n            error.description = 'Please enter at least 5 charactor description'\r\n        }\r\n\r\n        if(!moment(values.targetDate).isValid) {\r\n            error.description = 'Target date is not valid'\r\n        }\r\n\r\n        return error\r\n    }\r\n   \r\n    render() { \r\n        let {description, targetDate } = this.state\r\n       \r\n        return (\r\n            <div className=\"container\">\r\n                <h3>Update</h3>\r\n                <Formik\r\n                    initialValues = {{ description, targetDate }}\r\n                    onSubmit = {this.onSubmit}\r\n                    validateOnChange = {false}\r\n                    validateOnBlur = {false}\r\n                    validate = {this.validate}\r\n                    enableReinitialize = {true}\r\n                >\r\n                    {\r\n                        (props) => (\r\n                            <Form>\r\n                                <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning\" />\r\n                                <ErrorMessage name=\"targetDate\" component=\"div\" className=\"alert alert-warning\" />\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>Description</label>\r\n                                    <Field className=\"form-control\" type=\"text\" name=\"description\" />\r\n                                    <label>Target date</label>\r\n                                    <Field className=\"form-control\" type=\"date\" name=\"targetDate\" />\r\n                                </fieldset>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default UpdateComponent;"]},"metadata":{},"sourceType":"module"}