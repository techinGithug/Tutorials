{"ast":null,"code":"var _jsxFileName = \"D:\\\\techin\\\\react\\\\todo-app\\\\src\\\\components\\\\todo\\\\TodoApp.jsx\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nclass TodoApp extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"TodoApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: LoginComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      component: LoginComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/welcome/:name\",\n      component: WelcomeComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/todo\",\n      component: ListTodosComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: ErrorComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nclass WelcomeComponent extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"WelcomeComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Welcome \", this.props.match.params.name, \"Todo Lists click \", React.createElement(\"a\", {\n      href: \"/todo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"here\"));\n  }\n\n}\n\nclass ListTodosComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [{\n        id: 1,\n        description: 'Learn React'\n      }, {\n        id: 2,\n        description: 'Lear Springboot'\n      }, {\n        id: 3,\n        description: 'Lear Javascript'\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ListTodosComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"List Todos\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"id\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"description\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.todos.map(todo => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, todo.id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, todo.description))))));\n  }\n\n}\n\nfunction ErrorComponent() {\n  return React.createElement(\"div\", {\n    style: {\n      fontSize: \"50px\",\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Page not found\");\n}\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'in28minutes',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(e) {\n    // console.log(this.state)\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  loginClicked() {\n    if (this.state.username === 'in28minutes' && this.state.password === 'dummy') {\n      this.props.history.push(\"/welcome/\".concat(this.state.username)); //this.setState({showSuccessMessage: true})\n      //this.setState({hasLoginFailed: false})\n    } else {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"LoginComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.state.hasLoginFailed && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Invalid Credentials\"), this.state.showSuccessMessage && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Login successful\"), \"Username: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), \"Password: \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"\",\n      onClick: this.loginClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Login\"));\n  }\n\n} // function  ShowInvalidCredentials(props) {\n//     if(props.hasLoginFailed) {\n//         return <div>Invalid Credentials</div>\n//     }\n//     return null\n// }\n// function ShowLoginSuccessMessage(props) {\n//     if(props.showSuccessMessage) {\n//         return <div>Login successful</div>\n//     }\n//     return null\n// }\n\n\nexport default TodoApp;","map":{"version":3,"sources":["D:\\techin\\react\\todo-app\\src\\components\\todo\\TodoApp.jsx"],"names":["React","Component","BrowserRouter","Router","Route","Switch","TodoApp","render","LoginComponent","WelcomeComponent","ListTodosComponent","ErrorComponent","props","match","params","name","constructor","state","todos","id","description","map","todo","fontSize","color","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","e","setState","target","value","history","push"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\nclass TodoApp extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"TodoApp\">\r\n                <Router>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={LoginComponent} />\r\n                        <Route path=\"/login\" component={LoginComponent} />\r\n                        <Route path=\"/welcome/:name\" component={WelcomeComponent} />\r\n                        <Route path=\"/todo\" component={ListTodosComponent} />\r\n                        <Route component={ErrorComponent} />\r\n                    </Switch>\r\n                </Router>\r\n               {/* <LoginComponent />\r\n               <WelcomeComponent /> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass WelcomeComponent extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"WelcomeComponent\">\r\n                Welcome {this.props.match.params.name}\r\n                Todo Lists click <a href=\"/todo\">here</a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ListTodosComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            todos:\r\n            [\r\n                {id: 1, description: 'Learn React'},\r\n                {id: 2, description: 'Lear Springboot'},\r\n                {id: 3, description: 'Lear Javascript'}\r\n            ]   \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ListTodosComponent\">\r\n                <h1>List Todos</h1>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>id</th>\r\n                            <th>description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.todos.map(\r\n                                todo => \r\n                                <tr>\r\n                                    <td>{todo.id}</td>\r\n                                    <td>{todo.description}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction ErrorComponent() {\r\n    return <div style={{fontSize: \"50px\", color: \"red\"}}>Page not found</div>\r\n}\r\n\r\nclass LoginComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: 'in28minutes',\r\n            password: '',\r\n            hasLoginFailed : false,\r\n            showSuccessMessage: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.loginClicked = this.loginClicked.bind(this)\r\n    }\r\n\r\n    handleChange(e) {\r\n        // console.log(this.state)\r\n        this.setState(\r\n            {\r\n                [e.target.name]: e.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    loginClicked() {\r\n        if(this.state.username === 'in28minutes' && this.state.password === 'dummy') {\r\n            this.props.history.push(`/welcome/${this.state.username}`)\r\n            //this.setState({showSuccessMessage: true})\r\n            //this.setState({hasLoginFailed: false})\r\n        } else {\r\n            this.setState({showSuccessMessage: false})\r\n            this.setState({hasLoginFailed: true})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"LoginComponent\">\r\n                {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed} />\r\n                <ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage} />*/}\r\n                {this.state.hasLoginFailed && <div>Invalid Credentials</div>}\r\n                {this.state.showSuccessMessage && <div>Login successful</div>}\r\n                Username: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                <button className=\"\" onClick={this.loginClicked}>Login</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// function  ShowInvalidCredentials(props) {\r\n//     if(props.hasLoginFailed) {\r\n//         return <div>Invalid Credentials</div>\r\n//     }\r\n//     return null\r\n// }\r\n\r\n// function ShowLoginSuccessMessage(props) {\r\n//     if(props.showSuccessMessage) {\r\n//         return <div>Login successful</div>\r\n//     }\r\n//     return null\r\n// }\r\n\r\nexport default TodoApp"]},"metadata":{},"sourceType":"module"}